# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ 'main' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  jobid: ${GITHUB_JOB}
  workspace: ${GITHUB_WORKSPACE}
  branch: ${GITHUB_REF##*/}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Deployment:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDS }}'
          
      - name: login to GCR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.GCR }}
          username: _json_key
          password: '{ "type": "service_account", "project_id": "silverware-369717", "private_key_id": "68bd1684b1fd9121e30d2fca93e19a38f1d4f4f8", "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDbPx45edozMZ84\n2xV3AA3335Xzpa7ZIGKF3NWHr52713l1AFipFCiSawJ3VZhk/XS7eUNUQHoBCAZr\ntBEYij6Mz7SC21uOBHMlrW+HwEV2cQ/PJuF4Uf57cnMeSlQCVsS+PsBDcE2OgfJM\n5t88fLJO/jtwFkDo2hwun7BTMB4hqgk87v7/D2SOAhis3fiKH9vjzhU7/fyB1QlS\nZ9gF1xh6EAB1NVaxwnORG5hk1wARmzLZJKBbkhiqM2dimTM1RDq195SWNR63WvnB\ns/Hdmh0rRjxcO0hbmED8A2jFhO7i+V/555BBZWMz2s1d9V2AftVeHvufwoBF5VzN\nxFGfvazvAgMBAAECggEAIC0JMIIzhaPYrC1q3wYBBsmnZhSArpjUHLUmGT2qtnCP\nAJ7GZDnzIlnWCNFlBh00TncjbG/x98jHuHK6t5FCUMQCx9mNfDAm/faQEaokB5fc\nLBiWqmPOJyvKvT1HSviU8x6edMc8epeTibmwNV5PhMxGyNJbQFESJb2F0Q+UvHfE\nH5rft1SvL62R/VBG7kQlGRiD20Woi15iu8Ch2d/ZUxOEeT0pwQd2ro/LKCQX2tca\nqQENmVf4cyRgBhHl89LcmpV0eJjDq8HnREilXPOFMk+z2nqDEi9sD++uiioiVeF7\nhAFZT9LgHW1/6oFpq5I7hFwmrc+ktiLMM58Rm+Ia4QKBgQD+kcsWw5ofhKuAzKbs\ndOgYvStqE6CIuL41k1wXQmKYdFXTQPK2ML7sG0C36GM4UukPaEOwiHraKkRY1b1E\n4OSeDmH+yj/kjw9ijLw7jWPygdVkZFlPb5TMXwvbV6pMBYYE4Nnt6Sdhn/LqFYHc\nGEhLfc7BO6Ws1J9hP3kgrwzNFwKBgQDceoLycpjsIHmF90IPXnBCjxcC/6eBR4wZ\nDXnMFrhk5uH0OWFemIK2Mt/jam0SrEBkRsdQwJO1qPR0o+lKwBixiXPcOSkEKit2\nrR41mvsuEsQYsgfVV+ebmN/1FDDcdpu5EZPaonHbdFk9TP5wuAM+6FxI0X+4TJvJ\nPS9se7D16QKBgQC5eHdCypgLxpk9ad1kAXjoLUroKgyYECFk30wFFjTHZlrxYyxy\nWOmBFAn+86z2aFGtDAXlJEp9kLXjEzambEOkdE4pWClc2G4ZGvg5WzYqhTV3wzTe\njykWDVmSITjN0mhmPXwJvgkXM3XD3o+ST468kZiFaHO4i+Di9V/G1EK7WQKBgQDO\nYDrseIpeFHPMC0shmbOZCdlvbCC96VvhI3ULrYTCpj+A3Kkg478OjwZ1F+yrGuNX\nOc1d8DUTSOgxujAoUTGMFW6HCFY1WMfAWYG6iaxuTxCRUSv17keUpP+Vp2WpJ7jR\n/fsZHw9WbU0PDV/p4MThAJ1JaBiWSddVAlm+wPU+6QKBgQDiWAHp8W2xnOmXqGPa\n4GHuzlIkuNFQzF82nIphJBbLcd4Nshw41Ffh6nKwhN5H7pprQObLwKQOig3qB09D\nPJAmWvXUMXFn1vdc4e8UmBFhRD1R5LFpifHO5XFywuEzCkQKB/qaMVphx53e5qT7\nN3i+PV6wvAQUtttEx1dEf7IFNQ==\n-----END PRIVATE KEY-----\n", "client_email": "silverware@silverware-369717.iam.gserviceaccount.com", "client_id": "113775590477441367378", "auth_uri": "https://accounts.google.com/o/oauth2/auth", "token_uri": "https://oauth2.googleapis.com/token", "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs", "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/silverware%40silverware-369717.iam.gserviceaccount.com" }'
        
      - name: generating frontend image name 
        run: echo "DOCKERFRONTENDIMAGE=silverwaredev-frontend-${{ env.branch }}-${{ env.jobid }}" >> $GITHUB_ENV
      
      - name: generating backend image name 
        run: echo "DOCKERBACKENDIMAGE=silverwaredev-backend-${{ env.branch }}-${{ env.jobid }}" >> $GITHUB_ENV
      
      - name: Adding gcp registry secret to env (for docker access)
        run:  echo "GCP_REGISTRY=${{secrets.GCP_REGISTRY}}" >> $GITHUB_ENV
        
      - name: Build backend docker image
        run: cd backend && docker build -t "${{ env.GCP_REGISTRY }}{{env.DOCKERBACKENDIMAGE}}:latest"
      

          
